@import 'colors.scss';
@import 'constants.scss';
@import 'fonts.scss';
@import 'prefabs.scss';
@import 'animations.scss';

.main {
    @include colorDefaultBackground;
    @include fontNormal;
    @include scroll;
    position: relative;
    width: 100%;
    height: 100%;
    overflow: auto;
    margin: auto;
}

.menu {
    display: grid;
    position: sticky;
    top: 0;
    right: 0;
    height: 0;
    z-index: 1000;
    width: fit-content;
    justify-content: end;

    & > span {
        @include colorBackground(second);
        @include fontNormal;
        @include centerGrid;
        padding: 2px 5px;
        width: 45px;
        border-radius: 15px;
        font-weight: bold;
        font-size: smaller;
        margin: 1px;
        user-select: none;
    }

    & > .zoomInButton {
        height: $iconNormalSize;
        width: $iconNormalSize;
        border-radius: $iconNormalSize / 2;
        justify-self: center;
        margin: 1px;
    }
    
    & > .zoomOutButton {
        @extend .zoomInButton;
        margin-top: 1px;
    }
}

.innerPage {
    @include colorBackground(document);
    font-family: $fontDocument;
    flex-shrink: 0;
    min-width: 0;
    transform-origin: top left;
    width: $pageWidth;
    padding: 0.75cm;
    padding-bottom: 2cm;
    min-height: 100%;
    margin: auto;
}

.contentHolder {
    @include contentSlideIn(200ms);
}

.error {
    color: color(error);
    margin: 10px;
    font-weight: bold;
}

.horizontal {
    display: flex;
    align-items: row;
}

.ability {
    @include colorWithShadow(second);
    @include fontNormal;
    padding: 5px;
    margin-bottom: 10px;

    &[data=open] {
        cursor: pointer;
    }
    &[data=closed] {
        cursor: pointer;
        border-bottom: 2px solid;
    }
}

.spell {
    @include colorWithShadow(second);
    @include fontNormal;
    padding: 5px;
    margin: 3px 0 7px 0;
    cursor: pointer;
}

.iconRow {
    & > span {
        margin-left: 5px;
    }
}

.spellComponent {
    @include colorBackground(second);
    @include colorInteractiveControl;
    border-radius: 3px;
    display: inline-flex;
    position: relative;
    justify-content: center;
    width: 0.9em;
    height: 0.9em;
    font-size: smaller;
    margin-left: 3px
}

.chargeToggle {
    @include colorDecoration(second);
    display: flex;
    position: relative;
    box-shadow: inset colorInGroup(second, shadow) 0 0 5px -1px;
    height: 15px;
    width: 15px;
    margin-left: 5px;
    content: " ";
    cursor: pointer;
    
    &[data=active]::after {
        background: colorInGroup(second, text);
        position: absolute;
        z-index: 100;
        left: 0;
        top: 0;
        right: 0;
        bottom: 0;
        margin: 3px;
        width: auto;
        height: auto;
        content: " ";
    }
}

.loading {
    width: 100%;
    height: 100%;
    margin-top: 100px;
    & svg {
        height: 0.85in;
    }
}

.encounterButton {
    @include colorShadow(interactive);
    flex: 1;
    padding: 5px;
    font-weight: bold;
    font-size: 14px;
}

.encounterCardHolder {
    display: grid;
    grid-template-columns: repeat(5, minmax(0, 1fr));
    grid-column-gap: 10px;
    grid-row-gap: 10px;
}

.encounterCard {
    @include colorWithShadow(second);
    display: grid;
    grid-template-columns: minmax(0, 1fr);
    grid-template-rows: auto auto 16px 16px 16px 1fr;
    gap: 3px;
    user-select: none;
    font-size: 14px;
    position: relative;

    .encounterCardHeader {
        @include colorWithShadow(main);
        padding: 1px 5px;
        width: 100%;

        & > div {
            @include fontNoLineBreak;
            font-size: 15px;
            font-weight: bold;
            width: 100%;
        }
    }

    .encounterCardToken {
        @include colorBackground(interactive);
        @include centerFlex;
        position: absolute;
        height: 22px;
        width: 22px;
        border-radius: 50%;
        left: calc(100% - 19px);
        top: -3px;
        z-index: 1000;

        &[data=hide] {
            display: none;
        }
    }

    .encounterCardRow {
        @include colorDecoration(second);
        display: grid;
        grid-template-columns: 1fr auto;
        padding: 0 2px;
        align-items: center;
        margin: 0 3px;
    }

    .encounterCardInputRow {
        @extend .encounterCardRow;
        grid-template-columns: auto 1fr auto;
        gap: 5px;
    
        .encounterCardInput {
            font: inherit;
            width: 100%;
            height: 16px;
            text-align: right;
            border-radius: 8px;
            padding: 0 8px;
    
            &::-webkit-outer-spin-button,
            &::-webkit-inner-spin-button {
                display: none;
            }
        }
    }

    .encounterCardPortrait {
        @include centerFlex();
        overflow: hidden;
        margin: 3px;
        aspect-ratio: 1;

        & > img {
            width: 100%;
            margin: auto;
        }
    }

    .encounterCardTextarea {
        display: flex;
        font: inherit;
        border: none;
        outline: none;
        padding: 2px;
        min-height: 22px;
        margin: 0 3px 3px 3px;
        resize: vertical;
        min-height: calc(100% - 3px);
    }
}

.spaceOutRolls {
    & > span:not(:last-child) {
        margin-right: 5px;
    }
}

.attributeBox {
    display: grid;
    grid-template-columns: 1fr;
    justify-items: center;
    flex: 1;
    border: 2px solid;
    border-radius: 10px;
    padding: 5px 5px;
    margin: 0 1px;

    & > div {
        position: relative;
        width: 100%;
        border-bottom: 1px solid;
        margin: 5px 0;
    }

    & > span {
        width: 100%;
    }
}

.passive {
    display: grid;
    grid-template-columns: auto minmax(0, 1fr);
    gap: 10px;

    & > b {
        @include colorDecoration(main);
        @include centerFlex;
        border: 2px solid;
        pointer-events: none;
        user-select: none;
        border-radius: $iconLargeSize;
        height: $iconSmallSize;
        width: $iconSmallSize;
    }
}

.pageSelector {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(0, 1fr));
    gap: 3px;

    & > button {
        height: $smallMenuItemHeight;

        &:first-child {
            border-top-left-radius: $smallMenuItemHeight / 2;
            border-bottom-left-radius: $smallMenuItemHeight / 2;
        }

        &:last-child {
            border-top-right-radius: $smallMenuItemHeight / 2;
            border-bottom-right-radius: $smallMenuItemHeight / 2;
        }
    }
}

.pageItem {
    &[data=hide] {
        display: none;
    }
}

.collapsibleGroup {
    position: relative;

    & > button {
        @include fontNormalBold;
        width: 100%;
        margin: 5px 0;
        border-radius: 10px;
    }

    &[data=open]::after {
        position: absolute;
        right: 10px;
        top: 0.5ch;
        border-color: transparent colorInGroup(interactive, text) transparent transparent;
        border-width: 5px;
        border-style: solid;
        z-index: 10000;
        content: " ";
    }

    &[data=closed]::after {
        position: absolute;
        right: 4px;
        top: 0.5ch;
        border-color: transparent transparent transparent colorInGroup(interactive, text);
        border-width: 5px;
        border-style: solid;
        z-index: 10000;
        content: " ";
    }
}

.skillTable {
    display: grid;
    grid-template-columns: minmax(0, 1fr);
    gap: 3px;
    font-family: $fontNormal;
    & > div {
        display: grid;
        grid-template-columns: auto 10px minmax(0, 1fr) 55px;
        gap: 5px;
        height: $iconSmallSize;

        & > label {
            font-family: $fontDocument;
        }

        & > div {
            @include colorBorder(document);
            height: 9px;
            width: 9px;
            margin-bottom: 3px;
            align-self: center;
            justify-self: center;
            &[data=proficient] {
                border: 2px solid;
                border-radius: 100%;
            }
            &[data=expert] {
                border: 2px solid;
                border-radius: 100%;
                background-color: color(accents);
            }
            &[data=none] {
                pointer-events: none;
            }
        }

        & > *:last-child {
            text-align: center;
            justify-self: center;
            align-self: center;
            height: fit-content;
        }
    }

    & > div:first-child {
        border-bottom: 2px solid;
        margin-bottom: 2px;
    }

    & > div:not(:first-child,:last-child) {
        border-bottom: 1px solid;
    }
}

.modifierChoice {
    @include colorDecoration(second);
    display: grid;
    grid-template-columns: minmax(0, 1fr) $labelLargeWidth;
    grid-template-rows: $iconSmallSize;
    font-family: $fontNormal;
    gap: 5px;
    padding: 3px;

    & > b {
        @include fontNoLineBreak;
        font-size: smaller;
        text-indent: 4px;
        align-self: center;
    }

    .dropdownItem {
        font-size: small;
        height: $iconSmallSize;
    }
}

.spellFilterMenu {
    display: grid;
    grid-template-columns: 60px repeat(auto-fit, $iconSmallSize);
    gap: 2px;
    border: 1px solid;
    border-radius: 10px;
    margin-bottom: 5px;

    & > label {
        @include fontNormalBold;
        align-self: center;
        text-indent: 5px
    }
}

.spellFilterMenuItem {
    @include centerFlex;
    height: $iconSmallSize;
    border: 1px solid;
    border-color: inherit;
    border-radius: 6px;

    &[data=off] {
        filter: opacity(80%);
    }
}

.spellItem {
    @include colorDecoration(second);
    display: flex;
    align-items: center;
    height: $iconSmallSize;
    text-indent: 10px;
    margin-bottom: 1px;

    & > button:first-of-type {
        justify-self: end;
        margin-left: auto;
    }

    & > button {
        padding: 3px;
        width: $iconSmallSize;
        height: $iconSmallSize;
        margin-left: 1px;
        & > svg {
            width: 100%;
            height: 100%;
        }
    }
}