@import 'styles/colors.scss';
@import 'styles/constants.scss';
@import 'styles/prefabs.scss';
@import 'styles/fonts.scss';

$headerHeight: 35px;
$navbarWidth: 35px;

.main {
    @include color(background);
    @include colorText();
    @include colorShadow();
    display: grid;
    grid-template-rows: $headerHeight minmax(0, 1fr);
    position: absolute;
    top: 80px;
    width: min(70%, var(--popup-width));
    max-height: calc(100% - 160px);
    min-height: $headerHeight * 5;

    & > .header {
        @include color(main);
        @include colorShadow();
        position: relative;
        display: flex;
        align-items: center;
        justify-content: left;
        font-weight: 700;
        font-size: 18px;
        user-select: none;
        z-index: 100;

        & > SVG {
            height: $headerHeight;
            width: $headerHeight;
            padding: 3px;
            margin-right: 6px;
        }

        & > .button {
            position: absolute;
            right: 0;
            height: $headerHeight;
            width: $headerHeight;

            & > SVG {
                height: 100%;
            }
        }
    }

    & > .body {
        display: grid;
        grid-template-columns: $navbarWidth 1fr;
        grid-template-rows: 100%;
        
        & > .navigation {
            @include color(third);
            z-index: 10;
            & > .icon {
                width: $navbarWidth;
                height: $navbarWidth;

                & > SVG {
                    height: 100%;
                }
            }
        }

        & > .content {
            display: block;
        }
    }
}

.button {
    @include colorInteract(second);
    display: flex;
    align-items: center;
    justify-content: center;
}

.icon {
    @include colorInteract(third);
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    user-select: none;

    &[data=open] {
        @include colorInteract(second);
    }
}

.input {
    @include color(second);
    @include colorText();
    display: flex;
    align-items: center;
    padding: 2.5px;
}

.inputRow {
    @extend .input;
    display: flex;
    height: 35px;
    width: 100%;

    & > span {
        @include fontNoLineBreak();
        font-size: medium;
        width: $labelWidth;
    }

    & > input {
        @include color(document);
        @include colorText();
        font: inherit;
        font-size: small;
        border: none;
        margin: 0;
        padding-left: 10px;
        height: 100%;
        width: 0;
        flex: 1;
    }

    & > button {
        height: 100%;
        flex: 1;
        font: inherit;
    }

    & > .dropdown {
        height: 30px;
        flex: 1;
    }
}

.dropdownItem {
    padding: 3px 10px;
    height: 30px;
}

.inputArea {
    @include colorText();
    @extend .input;
    height: 100%;

    .upload {
        display: flex;
        position: relative;
        justify-content: center;
        flex-direction: column;
        width: 100%;
        height: calc(100% - 10px);
        margin: 5px;
        padding: 10px;
        border: 2px dotted map-get($palette, border);

        & > input {
            position: absolute;
            background-color: transparent;
            align-items: center;
            border: none;
            opacity: 0;
            z-index: 5;
            width: 100%;
            height: 100%;
            cursor: pointer;
        }
    
        & > SVG {
            color: rgba(map-get($palette, text), 0.7);
            height: calc(100% - 30px);
            width: 100%;
        }
    
        & > div {
            display: flex;
            align-items: center;
            justify-content: center;
            user-select: none;
            height: 30px;
        }
    }
}

.inputHeader {
    @extend .input;
    @include color(main);
    @include colorText();
    flex: 1;
    z-index: 9;
    font-weight: bold;
    padding-left: 10px;
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;

    & > .compendiumSpellFilterGroup {
        margin-left: auto;
        align-self: flex-end;
    }

    & > .inputSearchbox {
        margin-left: auto;
        align-self: flex-end;
    }
}

.inputCompendium {
    display: grid;
    grid-template-columns: 130px 1fr;
}

.inputCompendiumArea {
    display: grid;
    grid-template-rows: $headerHeight minmax(0, 1fr);
    height: calc(100% - 2 * $headerHeight);
    z-index: 1000;
}

.inputCompendiumMenu {
    @include scroll();
    overflow: auto;
    border-right: 1px solid map-get($palette, "border")
}

.inputCompendiumValueList {
    @include scroll();
    @include color("document");
    position: relative;
    overflow: auto;
}

.inputCompendiumItem {
    @extend .input;
    @include colorInteract("document");
    display: grid;
    grid-template-columns: minmax(0, 1fr) minmax(0, 11ch) minmax(0, 0.8fr) minmax(0, 0.8fr) minmax(0, 0.8fr) 30px;
    border-bottom: 1px solid map-get($palette, border);
    gap: 3px;

    & > * {
        @include fontNoLineBreak();
        text-transform: capitalize;
    }

    &[data=selected] {
        @include colorInteract("forth");
    }
}

.inputCompendiumMenuItem {
    @extend .input;
    padding: 5px;
    width: 100%;
    font: inherit;

    &[value="0"] {
        @include colorInteract("third");
    }

    &[value="1"] {
        @include colorInteract("forth");
        padding-left: 15px;
    }

    &[data=selected] {
        @include colorInteract("second");
    }
}

.inputCompendiumListHeader {
    @extend .inputCompendiumItem;
    @include color("second");
    position: sticky;
    top: 0;
    border: none;
    font-weight: 500;
    outline: 1px solid map-get($palette, "border");
    z-index: 100;

    &:hover { filter: none; }

    & > div {
        @include colorInteract("second");
        position: relative;
        pointer-events: all;
        user-select: none;
        cursor: pointer;

        &[data=ascending]::after {
            position: absolute;
            white-space: normal;
            right: 3px;
            top: calc(50% - 5px);
            border-color: transparent transparent map-get($palette, icons) transparent;
            border-width: 5px;
            border-style: solid;
            content: " ";
        }
        
        &[data=descending]::after {
            position: absolute;
            white-space: normal;
            right: 3px;
            top: calc(50% - 5px);
            border-color: map-get($palette, icons) transparent transparent transparent;
            border-width: 5px;
            border-style: solid;
            content: " ";
        }
    }
}

.compendiumSpellFilterGroup {
    display: grid;
    grid-template-columns: repeat(10, 1fr);
    height: 100%;
    gap: 3px;
    align-items: center;
    
}

.compendiumSpellFilterGroupItem {
    @include colorInteract(third);
    font-weight: normal;
    font-size: small;
    padding: 5px;
    display: flex;
    height: 0.6 * $headerHeight;
    border-radius: 0.3 * $headerHeight;
    justify-content: center;
    align-items: center;

    &[data=selected] {
        @include color(forth);
    }
}

.inputCompendiumItemButton {
    display: flex;
    border-radius: 50%;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    height: $headerHeight * 0.6;
    width: $headerHeight * 0.6;
    margin-left: auto;
    justify-self: flex-end;
    border: none;

    & > svg {
        height: $headerHeight * 0.45;
        width: $headerHeight * 0.45;
    }
}

.compendiumPaginator {
    @include color(forth);
    position: sticky;
    display: grid;
    grid-template-columns: auto 10ch auto;
    text-align: center;
    justify-content: center;
    bottom: 0;
    padding: 2px;
    outline: 1px solid map-get($palette, "border");
    user-select: none;

    & > button {
        width: 100%;
        border-radius: 50%;
    }
}