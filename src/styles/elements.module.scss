@import 'colors.scss';

.fontExtension {
    @include colorText();
    font-weight: bold;
    font-size: small;
    text-align: center;
}

.roundedExtension {
    @include color(forth);
    @include colorShadow();
    border-radius: 10px;
    padding: 0 5px;
    margin: 0 3px
}

.center {
    flex: 1;
    height: 100%;
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
}

.bold {
    font-weight: bold;
}

.save {
    @extend .fontExtension;
    @extend .roundedExtension;
    
    display: inline-flex;
    user-select: none;
    align-items: center;
    flex: 1 1;
    width: fit-content;
    cursor: pointer;
}

.link {
    color: map-get($palette, accents);
    text-decoration: none;
    cursor: pointer;
    
    &:hover {
        text-decoration: underline;
    }
}

.linkContent {
    display: block;
    cursor: pointer;

    & > div {
        @extend .box;
    }
}

.linkLoading {
    @extend .box;
    @extend .header;
    user-select: none;
    cursor: pointer;
}

.line {
    border-bottom: 2px solid map-get($palette, border);
    margin: 5px 0;
}

.line-vertical {
    border-right: 2px solid map-get($palette, border);
    margin: 0 5px;
}

.align {
    display: flex;
    align-content: stretch;
    align-items: stretch;
    flex: 1;

    &[data=v], &[data=vc], &[data=cv] {
        flex-direction: column;
        justify-content: space-between;
    }

    &[data=h], &[data=hc], &[data=ch] {
        flex-direction: row;
        & > .line { @extend .line-vertical; border-bottom: none; }
    }

    &[data=c], &[data=hc], &[data=ch], &[data=vc], &[data=cv], 
    &[data=vch], &[data=vhc], &[data=vch], &[data=hcv], &[data=vhc], &[data=hvc] {
        align-items: center;
        & > .line { align-self: stretch; }
    }
}

.dice {
    @extend .fontExtension;
    @extend .roundedExtension;

    display: inline-flex;
    width: fit-content;
    align-items: center;
    white-space: nowrap;
    user-select: none;
    flex: 1;
    cursor: pointer;

    & > span, & > svg {
        margin-left: 5px;
    }
}

.fill {
    display: flex;
    align-items: stretch;
    width: 100%;
    height: 100%;
    flex: 1;
}

.box {
    @include color(third);
    padding: 5px;

    &[data=border] {
        @include colorShadow();
    }
}

.margin {
    display: block;
    flex: 1;
}

.block {
    flex: 1;
    width: 100%;
}

.image {
    display: flex;
    width: 100%;
    height: fit-content;

    &[border=true] {
        @include colorBorder();
    }

    & > img { width: 100%; }
}

.header {
    @include colorText();
    font-weight: bold;
    margin-top: 1px;
    margin-bottom: 1px;
    display: flex;
    align-items: center;

    &[data=underline] {
        border-bottom: 2px solid map-get($palette, border);
        margin-bottom: 6px;
    }
}

.header1 {
    @extend .header;
    font-size: x-large;
    margin-top: 1px;
    margin-bottom: 2px;
}

.header2 {
    @extend .header;
    font-size: larger;
}

.header3 {
    @extend .header;
    font-size: large;
}

.error {
    @include color(error);
    @include colorBorder();
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    flex: 1;
    height: 50px;
    font-size: large;
    font-weight: bold;
}

.icon {
    display: inline-flex;

    & > svg {
        width: auto;
        height: 1em;
        aspect-ratio: 1;
        color: inherit;
        fill: map-get($palette, forth);
    }
}

.toggle {
    flex: 1;
    width: fit-content;
    cursor: pointer;
    user-select: none;
}

.row {
    display: inline-flex;
}